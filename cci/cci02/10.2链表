

## 链表
总结：
    链表数据结构，无法像数组一样通过下标访问，决定了大多数链表问题都是在循环遍历中解决的，如有需要，再创建map或者新链表进行辅助解决
    
基础操作包括：

    删除、头插、尾插
    
输入参数为一个链表的，常见思路：

    快慢指针：,检查成环问题，没有环则可以拿到中间节点
    先后指针：先遍历一把，再遍历一把
    
输入参数为两个链表的，常见思路：

    两个链表，各一个指针，这是毋庸置疑的
    考虑两个链表不一样的情况
    
    


### 链表基础数据结构和操作
    todo 
### 删除重复节点：
1、map记录，重复则删除
补充进阶：不用缓存，需要遍历两遍

### 返回倒数第k个节点 
1、快慢指针
补充方法：递归 


### 节点删除
没有前节点，只能把下一个节点的值赋给本节点，然后删除下一个节点。

### 分割列表
需要新建几个变量？
不要求排序，

### 链表求和
1、长度不足，设置为0
2、注意特殊情况，最后一位求和满10进位

### 回文链表
1、反转比较
2、快慢指针找到中间的，
    2.1 慢指针入栈，再比较
    2.2 将后面一半翻转

3、递归！！！

### 链表相交：
1、遍历一遍先知道差值，长的先遍历抹平差值


### 环路检测

1、快慢指针
    相遇点分析
    环起点分析
    
     

